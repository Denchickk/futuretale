<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menuheart</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Variables
hsp = 0;
hsp_carry = 0
vsp = 0;
vsp_carry = 0
movespeed = 3;
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyup = -keyboard_check(vk_up)
keydown = keyboard_check(vk_down)
key_right = keyboard_check(vk_right)
key_left = -keyboard_check(vk_left)
updir = place_meeting(x,y-1,obj_square)
leftdir = place_meeting(x-1,y,obj_square)
rightdir = place_meeting(x+1,y,obj_square)
downdir = place_meeting(x,y+1,obj_square)

//React to inputs
moveh = key_left + key_right;
hsp = moveh * movespeed;
movev = keyup + keydown;
vsp = movev * movespeed;

var (hsp_final) = hsp + hsp_carry;
hsp_carry = 0

var (vsp_final) = vsp + vsp_carry;
vsp_carry = 0

//Horizontal Collision
if (place_meeting(x+hsp_final,y,obj_square))
{
    while(!place_meeting(x+sign(hsp_final),y,obj_square))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0
    hsp = 0
}
x += hsp_final;
//Verticle Collision
if (place_meeting(x,y+vsp_final,obj_square))
{
    while(!place_meeting(x,y+sign(vsp_final),obj_square))
    {
        y += sign(vsp_final);
    }
    vsp_final = 0
    vsp = 0
}
y += vsp_final;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
